from unittest import TestCase
from jvpm.parsing.Parser import *
from jvpm.parsing.constant_types import *
class TestTags(TestCase):
    def test_tags(self):
        p = Parser(b"\x07gh\x09ghij\x0aghij\x0bghij\x08kl\x03mnop\x04mnop\x05qrstqrst\x06qrstqrst\x0cuvuv\x01\x00\x05hello\x0fhog\x10go\x12\x01\x02\x03\x04")
        c = p.get_constant()
        self.assertEqual(type(c),ConstClass)
        self.assertEqual(c.name_index,b"gh")
        c = p.get_constant()
        self.assertEqual(type(c),ConstFieldRef)
        self.assertEqual(c.class_index,b"gh")
        self.assertEqual(c.name_and_type_index,b"ij")
        c = p.get_constant()
        self.assertEqual(type(c),ConstMethodRef)
        self.assertEqual(c.class_index,b"gh")
        self.assertEqual(c.name_and_type_index,b"ij")
        c = p.get_constant()
        self.assertEqual(type(c),ConstInterfaceMethodRef)
        self.assertEqual(c.class_index,b"gh")
        self.assertEqual(c.name_and_type_index,b"ij")
        c = p.get_constant()
        self.assertEqual(type(c),ConstString)
        self.assertEqual(c.string_index,b"kl")
        c = p.get_constant()
        self.assertEqual(type(c),ConstInteger)
        self.assertEqual(c.chars,b"mnop")
        c = p.get_constant()
        self.assertEqual(type(c),ConstFloat)
        self.assertEqual(c.chars,b"mnop")
        c = p.get_constant()
        self.assertEqual(type(c),ConstLong)
        self.assertEqual(c.high_bytes,b"qrst")
        self.assertEqual(c.low_bytes,b"qrst")
        c = p.get_constant()
        self.assertEqual(type(c),ConstDouble)
        self.assertEqual(c.high_bytes,b"qrst")
        self.assertEqual(c.low_bytes,b"qrst")
        c = p.get_constant()
        self.assertEqual(type(c),ConstNameAndType)
        self.assertEqual(c.name_index,b"uv")
        self.assertEqual(c.descriptor_index,b"uv")
        c = p.get_constant()
        self.assertEqual(type(c),ConstUtf8)
        self.assertEqual(c.length,b"\x00\x05")
        self.assertEqual(c.chars,b"hello")
        c = p.get_constant()
        self.assertEqual(type(c),ConstMethodHandle)
        self.assertEqual(c.reference_kind,b"h")
        self.assertEqual(c.reference_index,b"og")
        c = p.get_constant()
        self.assertEqual(type(c),ConstMethodType)
        self.assertEqual(c.descriptor_index,b"go")
        c = p.get_constant()
        self.assertEqual(type(c),ConstInvokeDynamic)
        self.assertEqual(c.bootstrap_method_attr_index,b"\x01\x02")
        self.assertEqual(c.name_and_type_index,b"\x03\x04")
